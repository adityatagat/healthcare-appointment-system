version: '3.8'

services:
  appointment-service:
    build:
      context: .
      target: development
    container_name: appointment-service
    restart: unless-stopped
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - PORT=3001
      - MONGODB_URI=mongodb://mongodb:27017/healthcare_appointments
      - JWT_SECRET=your_jwt_secret_key_here
      - AUTH_SERVICE_URL=http://auth-service:3000/api/v1
      - PATIENT_SERVICE_URL=http://patient-service:3002/api/v1
      - DOCTOR_SERVICE_URL=http://doctor-service:3003/api/v1
    volumes:
      - .:/app
      - /app/node_modules
      - ./logs:/app/logs
    working_dir: /app
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - healthcare-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  mongodb:
    image: mongo:6.0
    container_name: mongodb
    restart: always
    environment:
      - MONGO_INITDB_DATABASE=healthcare_appointments
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=admin123
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    ports:
      - "27017:27017"
    networks:
      - healthcare-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh mongodb://admin:admin123@localhost:27017/admin --quiet
      interval: 10s
      timeout: 5s
      retries: 5

  mongo-express:
    image: mongo-express:1.0.0
    container_name: mongo-express
    restart: always
    ports:
      - "8081:8081"
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongodb
      - ME_CONFIG_MONGODB_PORT=27017
      - ME_CONFIG_MONGODB_ENABLE_ADMIN=true
      - ME_CONFIG_BASICAUTH_USERNAME=admin
      - ME_CONFIG_BASICAUTH_PASSWORD=password
    depends_on:
      - mongodb
    networks:
      - healthcare-network

networks:
  healthcare-network:
    driver: bridge

volumes:
  mongodb_data:
